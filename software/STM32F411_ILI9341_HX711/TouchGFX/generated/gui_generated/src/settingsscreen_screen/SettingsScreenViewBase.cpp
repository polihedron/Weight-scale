/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/SettingsScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

SettingsScreenViewBase::SettingsScreenViewBase() :
    buttonCallback(this, &SettingsScreenViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &SettingsScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 320, 240);
    box1.setColor(touchgfx::Color::getColorFromRGB(110, 112, 113));
    add(box1);

    button1.setXY(251, 183);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BACK_WHITE_ID), touchgfx::Bitmap(BITMAP_BACK_BLACK_ID));
    button1.setAction(buttonCallback);
    add(button1);

    textAreaCy1.setPosition(168, 57, 152, 36);
    textAreaCy1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaCy1.setLinespacing(0);
    Unicode::snprintf(textAreaCy1Buffer, TEXTAREACY1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FVV4).getText());
    textAreaCy1.setWildcard(textAreaCy1Buffer);
    textAreaCy1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C0HY));
    add(textAreaCy1);

    textAreaCx1.setPosition(7, 57, 148, 36);
    textAreaCx1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaCx1.setLinespacing(0);
    Unicode::snprintf(textAreaCx1Buffer, TEXTAREACX1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CGV2).getText());
    textAreaCx1.setWildcard(textAreaCx1Buffer);
    textAreaCx1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P04L));
    add(textAreaCx1);

    flexButtonCy1.setBoxWithBorderPosition(0, 0, 152, 36);
    flexButtonCy1.setBorderSize(3);
    flexButtonCy1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonCy1.setAlpha(0);
    flexButtonCy1.setAction(flexButtonCallback);
    flexButtonCy1.setPosition(168, 57, 152, 36);
    add(flexButtonCy1);

    flexButtonCy0.setBoxWithBorderPosition(0, 0, 152, 36);
    flexButtonCy0.setBorderSize(3);
    flexButtonCy0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonCy0.setAlpha(0);
    flexButtonCy0.setAction(flexButtonCallback);
    flexButtonCy0.setPosition(168, 9, 152, 36);
    add(flexButtonCy0);

    flexButtonCx0.setBoxWithBorderPosition(0, 0, 155, 36);
    flexButtonCx0.setBorderSize(3);
    flexButtonCx0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonCx0.setAlpha(0);
    flexButtonCx0.setAction(flexButtonCallback);
    flexButtonCx0.setPosition(0, 9, 155, 36);
    add(flexButtonCx0);

    flexButtonCx1.setBoxWithBorderPosition(0, 0, 155, 36);
    flexButtonCx1.setBorderSize(2);
    flexButtonCx1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(51, 20, 20), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonCx1.setAlpha(0);
    flexButtonCx1.setAction(flexButtonCallback);
    flexButtonCx1.setPosition(0, 57, 155, 36);
    add(flexButtonCx1);

    flexButtonOK.setBoxWithBorderPosition(0, 0, 62, 48);
    flexButtonOK.setBorderSize(0);
    flexButtonOK.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonOK.setBitmaps(Bitmap(BITMAP_KEYBOARD_KEY_OK_ID), Bitmap(BITMAP_KEYBOARD_KEY_OK_HIGHLIGHTED_ID));
    flexButtonOK.setBitmapXY(0, 0);
    flexButtonOK.setVisible(false);
    flexButtonOK.setAction(flexButtonCallback);
    flexButtonOK.setPosition(98, 192, 62, 48);
    add(flexButtonOK);

    flexButtonExit.setBoxWithBorderPosition(0, 0, 62, 48);
    flexButtonExit.setBorderSize(0);
    flexButtonExit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonExit.setBitmaps(Bitmap(BITMAP_KEYBOARD_KEY_EXIT_ID), Bitmap(BITMAP_KEYBOARD_KEY_EXIT_HIGHLIGHTED_ID));
    flexButtonExit.setBitmapXY(0, 0);
    flexButtonExit.setVisible(false);
    flexButtonExit.setAction(flexButtonCallback);
    flexButtonExit.setPosition(160, 192, 62, 48);
    add(flexButtonExit);

    textAreaCx0.setPosition(7, 9, 148, 36);
    textAreaCx0.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaCx0.setLinespacing(0);
    Unicode::snprintf(textAreaCx0Buffer, TEXTAREACX0_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4P3W).getText());
    textAreaCx0.setWildcard(textAreaCx0Buffer);
    textAreaCx0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2NW));
    add(textAreaCx0);

    textAreaCy0.setPosition(168, 9, 152, 36);
    textAreaCy0.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaCy0.setLinespacing(0);
    Unicode::snprintf(textAreaCy0Buffer, TEXTAREACY0_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9PBW).getText());
    textAreaCy0.setWildcard(textAreaCy0Buffer);
    textAreaCy0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7OP1));
    add(textAreaCy0);

    textArea1.setPosition(164, 104, 151, 57);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(36, 207, 255));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XONX).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HPKF));
    add(textArea1);

    textArea2.setPosition(3, 104, 156, 59);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(36, 207, 255));
    textArea2.setLinespacing(0);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V8WH).getText());
    textArea2.setWildcard(textArea2Buffer);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FU0Y));
    add(textArea2);

    flexButtonSave.setBitmaps(Bitmap(BITMAP_SAVE_WHITE60_ID), Bitmap(BITMAP_SAVE_BLACK60_ID));
    flexButtonSave.setBitmapXY(0, 0);
    flexButtonSave.setAction(flexButtonCallback);
    flexButtonSave.setPosition(130, 178, 60, 60);
    add(flexButtonSave);

    flexButtonReset.setBitmaps(Bitmap(BITMAP_RESET_WHITE_ID), Bitmap(BITMAP_RESET_BLACK_ID));
    flexButtonReset.setBitmapXY(0, 0);
    flexButtonReset.setAction(flexButtonCallback);
    flexButtonReset.setPosition(10, 182, 50, 50);
    add(flexButtonReset);

    lineH1.setPosition(0, 0, 320, 57);
    lineH1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineH1.setPainter(lineH1Painter);
    lineH1.setStart(0, 47);
    lineH1.setEnd(320, 47);
    lineH1.setLineWidth(3);
    lineH1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineH1);

    lineH0.setPosition(0, 0, 320, 57);
    lineH0Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineH0.setPainter(lineH0Painter);
    lineH0.setStart(0, 1);
    lineH0.setEnd(320, 1);
    lineH0.setLineWidth(3);
    lineH0.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineH0);

    lineH2.setPosition(0, 47, 320, 57);
    lineH2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineH2.setPainter(lineH2Painter);
    lineH2.setStart(0, 49);
    lineH2.setEnd(320, 49);
    lineH2.setLineWidth(3);
    lineH2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineH2);

    lineH3.setPosition(0, 97, 320, 72);
    lineH3Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineH3.setPainter(lineH3Painter);
    lineH3.setStart(0, 60);
    lineH3.setEnd(320, 60);
    lineH3.setLineWidth(3);
    lineH3.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineH3);

    lineV1.setPosition(0, 0, 320, 169);
    lineV1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineV1.setPainter(lineV1Painter);
    lineV1.setStart(160, 0);
    lineV1.setEnd(160, 157);
    lineV1.setLineWidth(3);
    lineV1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineV1);

    lineV2.setPosition(0, 0, 320, 169);
    lineV2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineV2.setPainter(lineV2Painter);
    lineV2.setStart(319, 0);
    lineV2.setEnd(319, 157);
    lineV2.setLineWidth(3);
    lineV2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(lineV2);

    lineV0.setPosition(0, 0, 320, 169);
    lineV0Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    lineV0.setPainter(lineV0Painter);
    lineV0.setStart(1, 0);
    lineV0.setEnd(1, 157);
    lineV0.setLineWidth(3);
    lineV0.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(lineV0);
}

SettingsScreenViewBase::~SettingsScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void SettingsScreenViewBase::setupScreen()
{

}

void SettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards North
        application().gotoMainScreenScreenSlideTransitionNorth();
    }
}

void SettingsScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonCy1)
    {
        //Interaction2
        //When flexButtonCy1 clicked call virtual function
        //Call calCy1Clicked
        calCy1Clicked();
    }
    if (&src == &flexButtonOK)
    {
        //Interaction3
        //When flexButtonOK clicked call virtual function
        //Call okClicked
        okClicked();
    }
    if (&src == &flexButtonExit)
    {
        //Interaction4
        //When flexButtonExit clicked call virtual function
        //Call exitClicked
        exitClicked();
    }
    if (&src == &flexButtonCy0)
    {
        //Interaction5
        //When flexButtonCy0 clicked call virtual function
        //Call calCy0Clicked
        calCy0Clicked();
    }
    if (&src == &flexButtonCx0)
    {
        //Interaction6
        //When flexButtonCx0 clicked call virtual function
        //Call calCx0Clicked
        calCx0Clicked();
    }
    if (&src == &flexButtonCx1)
    {
        //Interaction7
        //When flexButtonCx1 clicked call virtual function
        //Call calCx1Clicked
        calCx1Clicked();
    }
    if (&src == &flexButtonSave)
    {
        //Interaction8
        //When flexButtonSave clicked call virtual function
        //Call saveClicked
        saveClicked();
    }
    if (&src == &flexButtonReset)
    {
        //Interaction9
        //When flexButtonReset clicked call virtual function
        //Call restoreClicked
        restoreClicked();
    }
}
