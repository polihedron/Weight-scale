// 4.23.2 0x27a1a6d6
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_back_black[]; // BITMAP_BACK_BLACK_ID = 0, Size: 64x50 pixels
extern const unsigned char image_back_white[]; // BITMAP_BACK_WHITE_ID = 1, Size: 64x50 pixels
extern const unsigned char image_keyboard_background[]; // BITMAP_KEYBOARD_BACKGROUND_ID = 2, Size: 210x240 pixels
extern const unsigned char image_keyboard_key_delete_highlighted[]; // BITMAP_KEYBOARD_KEY_DELETE_HIGHLIGHTED_ID = 3, Size: 73x52 pixels
extern const unsigned char image_keyboard_key_exit_highlighted[]; // BITMAP_KEYBOARD_KEY_EXIT_HIGHLIGHTED_ID = 4, Size: 34x52 pixels
extern const unsigned char image_keyboard_key_highlighted[]; // BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID = 5, Size: 34x52 pixels
extern const unsigned char image_keyboard_key_ok_highlighted[]; // BITMAP_KEYBOARD_KEY_OK_HIGHLIGHTED_ID = 6, Size: 73x52 pixels
extern const unsigned char image_reset_black[]; // BITMAP_RESET_BLACK_ID = 7, Size: 50x50 pixels
extern const unsigned char image_reset_white[]; // BITMAP_RESET_WHITE_ID = 8, Size: 50x50 pixels
extern const unsigned char image_save_black60[]; // BITMAP_SAVE_BLACK60_ID = 9, Size: 60x60 pixels
extern const unsigned char image_save_white60[]; // BITMAP_SAVE_WHITE60_ID = 10, Size: 60x60 pixels
extern const unsigned char image_settings_black[]; // BITMAP_SETTINGS_BLACK_ID = 11, Size: 60x60 pixels
extern const unsigned char image_settings_white[]; // BITMAP_SETTINGS_WHITE_ID = 12, Size: 60x60 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_back_black, 0, 64, 50, 13, 19, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_back_white, 0, 64, 50, 13, 19, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_keyboard_background, 0, 210, 240, 0, 0, 210, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 240, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_delete_highlighted, 0, 73, 52, 0, 0, 73, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 52, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_exit_highlighted, 0, 34, 52, 0, 0, 34, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 52, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_highlighted, 0, 34, 52, 0, 0, 34, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 52, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_keyboard_key_ok_highlighted, 0, 73, 52, 0, 0, 73, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 52, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_reset_black, 0, 50, 50, 43, 13, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_reset_white, 0, 50, 50, 43, 13, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_save_black60, 0, 60, 60, 6, 55, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_save_white60, 0, 60, 60, 6, 55, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_settings_black, 0, 60, 60, 44, 27, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_settings_white, 0, 60, 60, 44, 27, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
